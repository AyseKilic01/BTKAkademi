<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIA0AAAEAIADcBgAAFgAAACgAAAAgAAAAGgAAAAEAIAAAAAAAgAYAAAAAAAAAAAAAAAAAAAAA
        AAC0ozcAtKM3ArWjN1a1ozeXtaM3+LWjN7S1ozcltaM3ArWjN221ozcstaM3JLWjN361ozd4taM3MLWj
        N4W1ozeItaM3JrWjNyi1ozd+taM3j7WjN5i1ozeHtaM3JrWjN2m1ozeTtaM3Y7WjN2S1ozdRtaM3jrWj
        N1O1ozdataM3g7WjNwC1ozdDtaM3n7WjN6e1ozf+taM3/7WjN561ozgCtaM3Y7WjN7C1ozeutaM3g7Wj
        N5y1ozehtaM3ZrWjN2y1ozevtaM3sbWjN4C1ozedtaM3M7WjN3a1ozeitaM3trWjN2G1ozc9taM3g7Wj
        N5O1oze4taM3lLWjN3i1ozextaM3DbWjN5O1ozeotaM3hrWjN5u1ozfYtaM33LWjNxq1ozcetaM3nLWj
        N6S1ozc3taM3oLWjN7q1ozdFtaM3IrWjN521ozejtaM3NbWjN5m1ozcctaM3YbWjN7K1ozfCtaM3d7Wj
        N0+1ozeKtaM3ubWjN1W1ozfEtaM3erWjN7G1ozcVtaM3orWjN6q1ozc5taM3ALWjN0W1oze/taM3Fbel
        OwC1ozd3taM3iLWjNgu1ozd+taM3RbWjN4W1ozcWtaM3fLWjN4K1ozcMtaM3lbWjN461ozeStaM3PbWj
        N3+1ozeHtaM3WLWjN3+1ozeStaM3D7WjN6O1ozdutaM3lbWjNxu1ozektaM3qrWjNzi1ozcKtaM3LbWj
        N1XIt14B//HQA8m5Yg7Ht14Q7+CvBbCdLQynlBoCtaM3D8a0WgjGtFsNt6U6C7WkOAG/rUwVu6lEHbWj
        Ng3///8B0MBwDLuqRBu0ojYStaM3DrWjNw24oDYAtaM3DrWjNxK1ozdztaM3jLWjN621ozeotaM3ZbWj
        N6G1ozdJrpwpBfjpwQj15bqK9eW6s/Xluq/15bqw9ea7f/bmuxL15boA9eW6UPXluo/25rsK////APbm
        u3T25rtm9uO5APXlumP15bqb9ua8GvbmuwAAAAAAAAAAAAAAAAC1ozcAtaM3ArWjNyC1ozfKtaM3rrWj
        N6i1ozdktaM3jrWjNzPKuWIA9eW6DPXlusX15bqc9eW6TPXlunT15brs9eW6UvXlugD15bpy9eW6zPXl
        ug7/+MQA9eW6qPXlupH15bpB9eW64PXlum315boB9eW6AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALWj
        N8q1ozeutaM3qLWjN4u1ozc1taM3AuLSlAD15boM9eW6xfXluqH15bpZ9eW6g/Xlutn15bo49eW6APXl
        unH15brL9eW6Dv/6xAD15bqm9eW6tfXlusj15bqQ9eW6B/XlugAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAtaM3yrWjN661ozentaM3rrWjN1m1ozcA9eW6APXlugz15brF9eW60vXluqr15brG9eW6yvXl
        uh715boA9eW6cfXlusv15boO//rEAPXluqX15brT9eW64/Xlulf15boA9eW6AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAC1ozfKtaM3rrWjN6W1ozemtaM3WLWjNwD15boA9eW6DPXlusb15bp99eW6FvXl
        ukj15bro9eW6V/Xlug715bp+9eW60PXluiP15boQ9eW6qPXlupX15bp39eW60PXlui/15boA9OW6AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAALWjN8q1ozeutaM3W7WjNzW1ozcttaM3APXlugD15boL9eW6t/Xl
        utr15brF9eW60PXlur715bpl9eW6vPXlutT15brj9eW6x/Xluon15bqh9eW6iPXlugn15bqa9eW6qvXl
        uhL15boAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtaM3xrWjN3C1ozcKtaM3ALSjNwC0ozcA9eW6APXl
        ugL15bol9eW6MvXlujP15bou9eW6EvXlug/15bou9eW6LvXlui315bow9eW6IfXluiH15boc9eW6APXl
        uhD15bou9eW6DPXlugAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC1ozdytaM3CLWjNwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAACAAAAAAAAAAAiA
        AAAAAAAIAAIkfAICIH8CAiD/BgIh/wYAAP8GAAB/HgAEfz////8=
</value>
  </data>
</root>